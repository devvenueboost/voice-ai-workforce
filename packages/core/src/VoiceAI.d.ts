import { VoiceAIConfig, VoiceResponse, VoiceAIState, VoiceAIEvents } from '../../types/src/types';
export declare class VoiceAI {
    private config;
    private state;
    private speechRecognition;
    private speechSynthesis;
    private eventListeners;
    constructor(config: VoiceAIConfig, events?: Partial<VoiceAIEvents>);
    private validateConfig;
    private mergeWithDefaults;
    private initialize;
    private initializeSpeechRecognition;
    private initializeSpeechSynthesis;
    startListening(): Promise<void>;
    stopListening(): Promise<void>;
    processTextInput(text: string): Promise<VoiceResponse>;
    speak(text: string): Promise<void>;
    private handleSpeechResult;
    private parseCommand;
    private parseCommandWithOpenAI;
    private parseCommandWithKeywords;
    private generateResponse;
    private createApiAction;
    private replaceTemplateVariables;
    private executeActions;
    private makeApiCall;
    private speakWithWebSpeech;
    private updateState;
    private handleError;
    getState(): VoiceAIState;
    updateConfig(newConfig: Partial<VoiceAIConfig>): void;
    updateContext(context: Record<string, any>): void;
}
